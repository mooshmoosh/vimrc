#!/bin/bash

export XDG_CONFIG_HOME=/home/will/extra_configs/python-lsp-nvim/config
export XDG_DATA_HOME=/home/will/extra_configs/python-lsp-nvim/data
mkdir -p $XDG_CONFIG_HOME/nvim/

cat > $XDG_CONFIG_HOME/nvim/init.lua <<EOF
-- packer setup {{{
require('packer').startup(function(use)
    use 'wbthomason/packer.nvim'
    use 'neovim/nvim-lspconfig'
    use {'nvim-tree/nvim-tree.lua',
      requires = {
        'nvim-tree/nvim-web-devicons',

      }
    }
    use {
      'nvim-telescope/telescope.nvim', tag = '0.1.4',
      requires = { {'nvim-lua/plenary.nvim'} }
    }
end)
-- }}}
-- LSP setup {{{
require'lspconfig'.jedi_language_server.setup{}

-- Use LspAttach autocommand to only map the following keys
-- after the language server attaches to the current buffer
vim.api.nvim_create_autocmd('LspAttach', {
  group = vim.api.nvim_create_augroup('UserLspConfig', {}),
  callback = function(ev)
    -- Enable completion triggered by <c-x><c-o>
    vim.bo[ev.buf].omnifunc = 'v:lua.vim.lsp.omnifunc'

    -- Buffer local mappings.
    local opts = { buffer = ev.buf }
    vim.keymap.set('n', '<leader>d', vim.lsp.buf.definition, opts)
    vim.keymap.set('n', 'K', vim.lsp.buf.hover, opts)
    vim.keymap.set('n', '<leader>r', vim.lsp.buf.rename, opts)
    vim.keymap.set({ 'n', 'v' }, '<leader>ca', vim.lsp.buf.code_action, opts)
    vim.keymap.set('n', '<leader>N', vim.lsp.buf.references, opts)
  end,
})
-- }}}
-- General setup: {{{
-- Key mappings {{{
vim.g.mapleader = ','
vim.keymap.set('i', 'kj', '<ESC>')
vim.keymap.set('n', '<leader>q', '<cmd>bdelete<CR>')
vim.keymap.set('n', '<leader>/', '<cmd>bnext<CR>')
vim.keymap.set('n', '<leader>,', '<cmd>bNext<CR>')
vim.keymap.set('n', '<leader>?', '<cmd>tnext<CR>')
vim.keymap.set('n', '<leader><', '<cmd>tNext<CR>')
-- the start of the command to open a file in the same directory as the current file
vim.keymap.set('n', '<leader>oi', ':edit %:p:h/')
vim.keymap.set('n', '<leader>tt', '<cmd>edit term:///bin/bash<CR>a')
vim.keymap.set('t', '<C-k><C-j>', '<C-\\\\><c-n>')
-- open the file tree explorer
vim.keymap.set('n', '<leader>nt', ':NvimTreeToggle<CR>')
-- ctrl-x ctrl-o to open omnicomplete is obnouxious. Tab weould be nice, but tab tab is ok too
vim.keymap.set('i', '<tab><tab>', '<c-x><c-o>')
-- clipboard fixes
clipboard_commands = {'y', 'yy', 'p', 'P'}
for i=1,#clipboard_commands do
    vim.keymap.set('n', clipboard_commands[i], '"+' .. clipboard_commands[i])
    vim.keymap.set('v', clipboard_commands[i], '"+' .. clipboard_commands[i])
end
--}}}
-- Options {{{
vim.cmd("set number")
--}}}
-- }}}
-- Plugin setup {{{
-- Setup nvim tree {{{
-- disable netrw at the very start of your init.lua
vim.g.loaded_netrw = 1
vim.g.loaded_netrwPlugin = 1
-- set termguicolors to enable highlight groups
vim.opt.termguicolors = true
require("nvim-tree").setup()
-- }}}
-- Setup telescope (fuzzy finding)
local builtin = require('telescope.builtin')
vim.keymap.set('n', '<C-p>', builtin.find_files, {})
vim.keymap.set('n', '<leader>gg', builtin.live_grep, {})
-- Not sure what these do, or if we needthem
--vim.keymap.set('n', '<leader>fb', builtin.buffers, {})
--vim.keymap.set('n', '<leader>fh', builtin.help_tags, {})
-- }}}
--}}}
EOF

if [ ! -d "$XDG_DATA_HOME/nvim/site/pack/packer/start/packer.nvim/.git" ]
then
    echo "Packer is not present... Downloading"
    git clone --depth 1 https://github.com/wbthomason/packer.nvim $XDG_DATA_HOME/nvim/site/pack/packer/start/packer.nvim
fi
source ~/pythonvenv/bin/activate
nvim "$@"
